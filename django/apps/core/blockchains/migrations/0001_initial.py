# Generated by Django 4.2.16 on 2024-10-02 21:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Chain",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chain_id", models.CharField(max_length=64)),
                (
                    "network",
                    models.CharField(
                        choices=[("mainnet", "Mainnet"), ("testnet", "Testnet")],
                        max_length=16,
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("rpc_node_runners", models.PositiveIntegerField(default=0)),
                ("denom", models.CharField(max_length=32)),
                (
                    "denom_price",
                    models.DecimalField(decimal_places=18, default=0, max_digits=32),
                ),
                (
                    "past_rewards",
                    models.DecimalField(decimal_places=18, default=0, max_digits=32),
                ),
                (
                    "future_rewards",
                    models.DecimalField(decimal_places=18, default=0, max_digits=32),
                ),
                (
                    "rewards_per_month",
                    models.DecimalField(decimal_places=18, default=0, max_digits=32),
                ),
                (
                    "months_remaining",
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                ("total_requests", models.PositiveBigIntegerField(default=0)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="chain-logos/"),
                ),
                (
                    "coingecko_id",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
            ],
            options={
                "unique_together": {("network", "chain_id")},
            },
        ),
        migrations.CreateModel(
            name="Denom",
            fields=[
                (
                    "denom",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
                ("ibc_denom", models.CharField(blank=True, max_length=68, null=True)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, default=0, max_digits=32),
                ),
                (
                    "coingecko_id",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reward",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("height", models.PositiveBigIntegerField(blank=True, null=True)),
                (
                    "month",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text='Null value is a future reward shown as "TBD".',
                        null=True,
                    ),
                ),
                ("reward_amount", models.PositiveIntegerField()),
                (
                    "reward_type",
                    models.CharField(
                        choices=[("manual", "Manual"), ("onchain", "Onchain")],
                        help_text="Manual rewards will be counted instead of OnChain reward for the same month if both exist.",
                        max_length=16,
                    ),
                ),
                (
                    "chain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rewards",
                        to="blockchains.chain",
                    ),
                ),
                (
                    "denom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="rewards",
                        to="blockchains.denom",
                    ),
                ),
            ],
            options={
                "unique_together": {("chain", "denom", "month", "reward_type")},
            },
        ),
        migrations.CreateModel(
            name="BlockRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("height", models.PositiveBigIntegerField()),
                ("requests", models.PositiveIntegerField()),
                (
                    "chain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="block_requests",
                        to="blockchains.chain",
                    ),
                ),
            ],
            options={
                "unique_together": {("chain", "height")},
            },
        ),
    ]
