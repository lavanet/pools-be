# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: lavanet/lava/spec/api_collection.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'lavanet/lava/spec/api_collection.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&lavanet/lava/spec/api_collection.proto\x12\x11lavanet.lava.spec\x1a\x14gogoproto/gogo.proto\"\x98\x03\n\rApiCollection\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12@\n\x0f\x63ollection_data\x18\x02 \x01(\x0b\x32!.lavanet.lava.spec.CollectionDataB\x04\xc8\xde\x1f\x00\x12$\n\x04\x61pis\x18\x03 \x03(\x0b\x32\x16.lavanet.lava.spec.Api\x12*\n\x07headers\x18\x04 \x03(\x0b\x32\x19.lavanet.lava.spec.Header\x12;\n\x10inheritance_apis\x18\x05 \x03(\x0b\x32!.lavanet.lava.spec.CollectionData\x12;\n\x10parse_directives\x18\x06 \x03(\x0b\x32!.lavanet.lava.spec.ParseDirective\x12\x30\n\nextensions\x18\x07 \x03(\x0b\x32\x1c.lavanet.lava.spec.Extension\x12\x36\n\rverifications\x18\x08 \x03(\x0b\x32\x1f.lavanet.lava.spec.Verification\"]\n\tExtension\x12\x0c\n\x04name\x18\x01 \x01(\t\x12%\n\x04rule\x18\x03 \x01(\x0b\x32\x17.lavanet.lava.spec.Rule\x12\x15\n\rcu_multiplier\x18\x04 \x01(\x04J\x04\x08\x02\x10\x03\"\x15\n\x04Rule\x12\r\n\x05\x62lock\x18\x01 \x01(\x04\"\x8d\x01\n\x0cVerification\x12\x0c\n\x04name\x18\x01 \x01(\t\x12:\n\x0fparse_directive\x18\x02 \x01(\x0b\x32!.lavanet.lava.spec.ParseDirective\x12-\n\x06values\x18\x03 \x03(\x0b\x32\x1d.lavanet.lava.spec.ParseValueJ\x04\x08\x04\x10\x05\"\xc5\x01\n\nParseValue\x12\x11\n\textension\x18\x01 \x01(\t\x12\x16\n\x0e\x65xpected_value\x18\x02 \x01(\t\x12\x17\n\x0flatest_distance\x18\x03 \x01(\x04\x12\x44\n\x08severity\x18\x04 \x01(\x0e\x32\x32.lavanet.lava.spec.ParseValue.VerificationSeverity\"-\n\x14VerificationSeverity\x12\x08\n\x04\x46\x61il\x10\x00\x12\x0b\n\x07Warning\x10\x01\"\x88\x02\n\x0e\x43ollectionData\x12H\n\rapi_interface\x18\x01 \x01(\tB1\xea\xde\x1f\rapi_interface\xf2\xde\x1f\x1cmapstructure:\"api_interface\"\x12H\n\rinternal_path\x18\x02 \x01(\tB1\xea\xde\x1f\rinternal_path\xf2\xde\x1f\x1cmapstructure:\"internal_path\"\x12-\n\x04type\x18\x03 \x01(\tB\x1f\xea\xde\x1f\x04type\xf2\xde\x1f\x13mapstructure:\"type\"\x12\x33\n\x06\x61\x64\x64_on\x18\x04 \x01(\tB#\xea\xde\x1f\x06\x61\x64\x64_on\xf2\xde\x1f\x15mapstructure:\"add_on\"\"\xce\x01\n\x06Header\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x32\n\x04kind\x18\x02 \x01(\x0e\x32$.lavanet.lava.spec.Header.HeaderType\x12\x35\n\x0c\x66unction_tag\x18\x03 \x01(\x0e\x32\x1f.lavanet.lava.spec.FUNCTION_TAG\"K\n\nHeaderType\x12\r\n\tpass_send\x10\x00\x12\x0e\n\npass_reply\x10\x01\x12\r\n\tpass_both\x10\x02\x12\x0f\n\x0bpass_ignore\x10\x03\"\x9b\x02\n\x03\x41pi\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x15\n\rcompute_units\x18\x03 \x01(\x04\x12\x1b\n\x13\x65xtra_compute_units\x18\x04 \x01(\x04\x12\x37\n\x08\x63\x61tegory\x18\x06 \x01(\x0b\x32\x1f.lavanet.lava.spec.SpecCategoryB\x04\xc8\xde\x1f\x00\x12;\n\rblock_parsing\x18\x07 \x01(\x0b\x32\x1e.lavanet.lava.spec.BlockParserB\x04\xc8\xde\x1f\x00\x12\x12\n\ntimeout_ms\x18\x08 \x01(\x04\x12\x37\n\x07parsers\x18\t \x03(\x0b\x32 .lavanet.lava.spec.GenericParserB\x04\xc8\xde\x1f\x00\"\xb2\x01\n\x0eParseDirective\x12\x35\n\x0c\x66unction_tag\x18\x01 \x01(\x0e\x32\x1f.lavanet.lava.spec.FUNCTION_TAG\x12\x19\n\x11\x66unction_template\x18\x02 \x01(\t\x12<\n\x0eresult_parsing\x18\x03 \x01(\x0b\x32\x1e.lavanet.lava.spec.BlockParserB\x04\xc8\xde\x1f\x00\x12\x10\n\x08\x61pi_name\x18\x04 \x01(\t\"\x7f\n\x0b\x42lockParser\x12\x12\n\nparser_arg\x18\x01 \x03(\t\x12\x33\n\x0bparser_func\x18\x02 \x01(\x0e\x32\x1e.lavanet.lava.spec.PARSER_FUNC\x12\x15\n\rdefault_value\x18\x03 \x01(\t\x12\x10\n\x08\x65ncoding\x18\x04 \x01(\t\"t\n\rGenericParser\x12\x12\n\nparse_path\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x32\n\nparse_type\x18\x03 \x01(\x0e\x32\x1e.lavanet.lava.spec.PARSER_TYPE\x12\x0c\n\x04rule\x18\x04 \x01(\t\"q\n\x0cSpecCategory\x12\x15\n\rdeterministic\x18\x01 \x01(\x08\x12\r\n\x05local\x18\x02 \x01(\x08\x12\x14\n\x0csubscription\x18\x03 \x01(\x08\x12\x10\n\x08stateful\x18\x04 \x01(\r\x12\x13\n\x0bhanging_api\x18\x05 \x01(\x08*\"\n\tEXTENSION\x12\x08\n\x04NONE\x10\x00\x12\x0b\n\x07\x41RCHIVE\x10\x01*\xd7\x01\n\x0c\x46UNCTION_TAG\x12\x0c\n\x08\x44ISABLED\x10\x00\x12\x10\n\x0cGET_BLOCKNUM\x10\x01\x12\x14\n\x10GET_BLOCK_BY_NUM\x10\x02\x12\x1a\n\x16SET_LATEST_IN_METADATA\x10\x03\x12\x16\n\x12SET_LATEST_IN_BODY\x10\x04\x12\x10\n\x0cVERIFICATION\x10\x05\x12\x16\n\x12GET_EARLIEST_BLOCK\x10\x06\x12\r\n\tSUBSCRIBE\x10\x07\x12\x0f\n\x0bUNSUBSCRIBE\x10\x08\x12\x13\n\x0fUNSUBSCRIBE_ALL\x10\t*\x94\x01\n\x0bPARSER_TYPE\x12\r\n\tNO_PARSER\x10\x00\x12\x10\n\x0c\x42LOCK_LATEST\x10\x01\x12\x12\n\x0e\x42LOCK_EARLIEST\x10\x02\x12\n\n\x06RESULT\x10\x03\x12\x11\n\rEXTENSION_ARG\x10\x04\x12\x0e\n\nIDENTIFIER\x10\x05\x12\x11\n\rDEFAULT_VALUE\x10\x06\x12\x0e\n\nBLOCK_HASH\x10\x07*\x83\x01\n\x0bPARSER_FUNC\x12\t\n\x05\x45MPTY\x10\x00\x12\x10\n\x0cPARSE_BY_ARG\x10\x01\x12\x13\n\x0fPARSE_CANONICAL\x10\x02\x12\x14\n\x10PARSE_DICTIONARY\x10\x03\x12\x1f\n\x1bPARSE_DICTIONARY_OR_ORDERED\x10\x04\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x06\x42-Z\'github.com/lavanet/lava/v2/x/spec/types\xa8\xe2\x1e\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'lavanet.lava.spec.api_collection_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\'github.com/lavanet/lava/v2/x/spec/types\250\342\036\001'
  _globals['_APICOLLECTION'].fields_by_name['collection_data']._loaded_options = None
  _globals['_APICOLLECTION'].fields_by_name['collection_data']._serialized_options = b'\310\336\037\000'
  _globals['_COLLECTIONDATA'].fields_by_name['api_interface']._loaded_options = None
  _globals['_COLLECTIONDATA'].fields_by_name['api_interface']._serialized_options = b'\352\336\037\rapi_interface\362\336\037\034mapstructure:\"api_interface\"'
  _globals['_COLLECTIONDATA'].fields_by_name['internal_path']._loaded_options = None
  _globals['_COLLECTIONDATA'].fields_by_name['internal_path']._serialized_options = b'\352\336\037\rinternal_path\362\336\037\034mapstructure:\"internal_path\"'
  _globals['_COLLECTIONDATA'].fields_by_name['type']._loaded_options = None
  _globals['_COLLECTIONDATA'].fields_by_name['type']._serialized_options = b'\352\336\037\004type\362\336\037\023mapstructure:\"type\"'
  _globals['_COLLECTIONDATA'].fields_by_name['add_on']._loaded_options = None
  _globals['_COLLECTIONDATA'].fields_by_name['add_on']._serialized_options = b'\352\336\037\006add_on\362\336\037\025mapstructure:\"add_on\"'
  _globals['_API'].fields_by_name['category']._loaded_options = None
  _globals['_API'].fields_by_name['category']._serialized_options = b'\310\336\037\000'
  _globals['_API'].fields_by_name['block_parsing']._loaded_options = None
  _globals['_API'].fields_by_name['block_parsing']._serialized_options = b'\310\336\037\000'
  _globals['_API'].fields_by_name['parsers']._loaded_options = None
  _globals['_API'].fields_by_name['parsers']._serialized_options = b'\310\336\037\000'
  _globals['_PARSEDIRECTIVE'].fields_by_name['result_parsing']._loaded_options = None
  _globals['_PARSEDIRECTIVE'].fields_by_name['result_parsing']._serialized_options = b'\310\336\037\000'
  _globals['_EXTENSION']._serialized_start=2261
  _globals['_EXTENSION']._serialized_end=2295
  _globals['_FUNCTION_TAG']._serialized_start=2298
  _globals['_FUNCTION_TAG']._serialized_end=2513
  _globals['_PARSER_TYPE']._serialized_start=2516
  _globals['_PARSER_TYPE']._serialized_end=2664
  _globals['_PARSER_FUNC']._serialized_start=2667
  _globals['_PARSER_FUNC']._serialized_end=2798
  _globals['_APICOLLECTION']._serialized_start=84
  _globals['_APICOLLECTION']._serialized_end=492
  _globals['_EXTENSION']._serialized_start=494
  _globals['_EXTENSION']._serialized_end=587
  _globals['_RULE']._serialized_start=589
  _globals['_RULE']._serialized_end=610
  _globals['_VERIFICATION']._serialized_start=613
  _globals['_VERIFICATION']._serialized_end=754
  _globals['_PARSEVALUE']._serialized_start=757
  _globals['_PARSEVALUE']._serialized_end=954
  _globals['_PARSEVALUE_VERIFICATIONSEVERITY']._serialized_start=909
  _globals['_PARSEVALUE_VERIFICATIONSEVERITY']._serialized_end=954
  _globals['_COLLECTIONDATA']._serialized_start=957
  _globals['_COLLECTIONDATA']._serialized_end=1221
  _globals['_HEADER']._serialized_start=1224
  _globals['_HEADER']._serialized_end=1430
  _globals['_HEADER_HEADERTYPE']._serialized_start=1355
  _globals['_HEADER_HEADERTYPE']._serialized_end=1430
  _globals['_API']._serialized_start=1433
  _globals['_API']._serialized_end=1716
  _globals['_PARSEDIRECTIVE']._serialized_start=1719
  _globals['_PARSEDIRECTIVE']._serialized_end=1897
  _globals['_BLOCKPARSER']._serialized_start=1899
  _globals['_BLOCKPARSER']._serialized_end=2026
  _globals['_GENERICPARSER']._serialized_start=2028
  _globals['_GENERICPARSER']._serialized_end=2144
  _globals['_SPECCATEGORY']._serialized_start=2146
  _globals['_SPECCATEGORY']._serialized_end=2259
# @@protoc_insertion_point(module_scope)
