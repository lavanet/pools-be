# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: lavanet/lava/plans/plan.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'lavanet/lava/plans/plan.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from cosmos.base.v1beta1 import coin_pb2 as cosmos_dot_base_dot_v1beta1_dot_coin__pb2
from lavanet.lava.spec import api_collection_pb2 as lavanet_dot_lava_dot_spec_dot_api__collection__pb2
from lavanet.lava.plans import policy_pb2 as lavanet_dot_lava_dot_plans_dot_policy__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1dlavanet/lava/plans/plan.proto\x12\x12lavanet.lava.plans\x1a\x14gogoproto/gogo.proto\x1a\x1e\x63osmos/base/v1beta1/coin.proto\x1a&lavanet/lava/spec/api_collection.proto\x1a\x1flavanet/lava/plans/policy.proto\"\x83\x04\n\x04Plan\x12\x18\n\x05index\x18\x01 \x01(\tB\t\xea\xde\x1f\x05index\x12\x18\n\x05\x62lock\x18\x03 \x01(\x04\x42\t\xea\xde\x1f\x05\x62lock\x12\x37\n\x05price\x18\x04 \x01(\x0b\x32\x19.cosmos.base.v1beta1.CoinB\r\xc8\xde\x1f\x00\xea\xde\x1f\x05price\x12(\n\rallow_overuse\x18\x08 \x01(\x08\x42\x11\xea\xde\x1f\rallow_overuse\x12&\n\x0coveruse_rate\x18\t \x01(\x04\x42\x10\xea\xde\x1f\x0coveruse_rate\x12$\n\x0b\x64\x65scription\x18\x0b \x01(\tB\x0f\xea\xde\x1f\x0b\x64\x65scription\x12\x16\n\x04type\x18\x0c \x01(\tB\x08\xea\xde\x1f\x04type\x12\x42\n\x1a\x61nnual_discount_percentage\x18\r \x01(\x04\x42\x1e\xea\xde\x1f\x1a\x61nnual_discount_percentage\x12\x44\n\x0bplan_policy\x18\x0e \x01(\x0b\x32\x1a.lavanet.lava.plans.PolicyB\x13\xc8\xde\x1f\x00\xea\xde\x1f\x0bplan_policy\x12*\n\x0eprojects_limit\x18\x0f \x01(\x04\x42\x12\xea\xde\x1f\x0eprojects_limit\x12*\n\x0e\x61llowed_buyers\x18\x10 \x03(\tB\x12\xea\xde\x1f\x0e\x61llowed_buyersJ\x04\x08\n\x10\x0bJ\x04\x08\x02\x10\x03J\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07J\x04\x08\x07\x10\x08*[\n\x0bGeolocation\x12\x07\n\x03GLS\x10\x00\x12\x07\n\x03USC\x10\x01\x12\x06\n\x02\x45U\x10\x02\x12\x07\n\x03USE\x10\x04\x12\x07\n\x03USW\x10\x08\x12\x06\n\x02\x41\x46\x10\x10\x12\x06\n\x02\x41S\x10 \x12\x06\n\x02\x41U\x10@\x12\x08\n\x02GL\x10\xff\xff\x03\x42.Z(github.com/lavanet/lava/v2/x/plans/types\xa8\xe2\x1e\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'lavanet.lava.plans.plan_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z(github.com/lavanet/lava/v2/x/plans/types\250\342\036\001'
  _globals['_PLAN'].fields_by_name['index']._loaded_options = None
  _globals['_PLAN'].fields_by_name['index']._serialized_options = b'\352\336\037\005index'
  _globals['_PLAN'].fields_by_name['block']._loaded_options = None
  _globals['_PLAN'].fields_by_name['block']._serialized_options = b'\352\336\037\005block'
  _globals['_PLAN'].fields_by_name['price']._loaded_options = None
  _globals['_PLAN'].fields_by_name['price']._serialized_options = b'\310\336\037\000\352\336\037\005price'
  _globals['_PLAN'].fields_by_name['allow_overuse']._loaded_options = None
  _globals['_PLAN'].fields_by_name['allow_overuse']._serialized_options = b'\352\336\037\rallow_overuse'
  _globals['_PLAN'].fields_by_name['overuse_rate']._loaded_options = None
  _globals['_PLAN'].fields_by_name['overuse_rate']._serialized_options = b'\352\336\037\014overuse_rate'
  _globals['_PLAN'].fields_by_name['description']._loaded_options = None
  _globals['_PLAN'].fields_by_name['description']._serialized_options = b'\352\336\037\013description'
  _globals['_PLAN'].fields_by_name['type']._loaded_options = None
  _globals['_PLAN'].fields_by_name['type']._serialized_options = b'\352\336\037\004type'
  _globals['_PLAN'].fields_by_name['annual_discount_percentage']._loaded_options = None
  _globals['_PLAN'].fields_by_name['annual_discount_percentage']._serialized_options = b'\352\336\037\032annual_discount_percentage'
  _globals['_PLAN'].fields_by_name['plan_policy']._loaded_options = None
  _globals['_PLAN'].fields_by_name['plan_policy']._serialized_options = b'\310\336\037\000\352\336\037\013plan_policy'
  _globals['_PLAN'].fields_by_name['projects_limit']._loaded_options = None
  _globals['_PLAN'].fields_by_name['projects_limit']._serialized_options = b'\352\336\037\016projects_limit'
  _globals['_PLAN'].fields_by_name['allowed_buyers']._loaded_options = None
  _globals['_PLAN'].fields_by_name['allowed_buyers']._serialized_options = b'\352\336\037\016allowed_buyers'
  _globals['_GEOLOCATION']._serialized_start=698
  _globals['_GEOLOCATION']._serialized_end=789
  _globals['_PLAN']._serialized_start=181
  _globals['_PLAN']._serialized_end=696
# @@protoc_insertion_point(module_scope)
