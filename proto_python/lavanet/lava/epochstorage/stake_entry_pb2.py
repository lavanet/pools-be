# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: lavanet/lava/epochstorage/stake_entry.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'lavanet/lava/epochstorage/stake_entry.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from lavanet.lava.epochstorage import endpoint_pb2 as lavanet_dot_lava_dot_epochstorage_dot_endpoint__pb2
from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from cosmos.base.v1beta1 import coin_pb2 as cosmos_dot_base_dot_v1beta1_dot_coin__pb2
from cosmos.staking.v1beta1 import staking_pb2 as cosmos_dot_staking_dot_v1beta1_dot_staking__pb2
from amino import amino_pb2 as amino_dot_amino__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n+lavanet/lava/epochstorage/stake_entry.proto\x12\x19lavanet.lava.epochstorage\x1a(lavanet/lava/epochstorage/endpoint.proto\x1a\x14gogoproto/gogo.proto\x1a\x1e\x63osmos/base/v1beta1/coin.proto\x1a$cosmos/staking/v1beta1/staking.proto\x1a\x11\x61mino/amino.proto\"\xbf\x04\n\nStakeEntry\x12.\n\x05stake\x18\x01 \x01(\x0b\x32\x19.cosmos.base.v1beta1.CoinB\x04\xc8\xde\x1f\x00\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\t\x12\x1b\n\x13stake_applied_block\x18\x03 \x01(\x04\x12<\n\tendpoints\x18\x04 \x03(\x0b\x32#.lavanet.lava.epochstorage.EndpointB\x04\xc8\xde\x1f\x00\x12\x13\n\x0bgeolocation\x18\x05 \x01(\x05\x12\r\n\x05\x63hain\x18\x06 \x01(\t\x12\x0f\n\x07moniker\x18\x08 \x01(\t\x12\x37\n\x0e\x64\x65legate_total\x18\t \x01(\x0b\x32\x19.cosmos.base.v1beta1.CoinB\x04\xc8\xde\x1f\x00\x12\x37\n\x0e\x64\x65legate_limit\x18\n \x01(\x0b\x32\x19.cosmos.base.v1beta1.CoinB\x04\xc8\xde\x1f\x00\x12\x1b\n\x13\x64\x65legate_commission\x18\x0b \x01(\x04\x12\x13\n\x0blast_change\x18\x0c \x01(\x04\x12<\n\x0c\x62lock_report\x18\r \x01(\x0b\x32&.lavanet.lava.epochstorage.BlockReport\x12\r\n\x05vault\x18\x0e \x01(\t\x12\x43\n\x0b\x64\x65scription\x18\x0f \x01(\x0b\x32#.cosmos.staking.v1beta1.DescriptionB\t\xc8\xde\x1f\x00\xa8\xe7\xb0*\x01\x12\r\n\x05jails\x18\x10 \x01(\x04\x12\x15\n\rjail_end_time\x18\x11 \x01(\x03J\x04\x08\x07\x10\x08\"2\n\x0b\x42lockReport\x12\r\n\x05\x65poch\x18\x01 \x01(\x04\x12\x14\n\x0clatest_block\x18\x02 \x01(\x04\x42\x31Z/github.com/lavanet/lava/v2/x/epochstorage/typesb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'lavanet.lava.epochstorage.stake_entry_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z/github.com/lavanet/lava/v2/x/epochstorage/types'
  _globals['_STAKEENTRY'].fields_by_name['stake']._loaded_options = None
  _globals['_STAKEENTRY'].fields_by_name['stake']._serialized_options = b'\310\336\037\000'
  _globals['_STAKEENTRY'].fields_by_name['endpoints']._loaded_options = None
  _globals['_STAKEENTRY'].fields_by_name['endpoints']._serialized_options = b'\310\336\037\000'
  _globals['_STAKEENTRY'].fields_by_name['delegate_total']._loaded_options = None
  _globals['_STAKEENTRY'].fields_by_name['delegate_total']._serialized_options = b'\310\336\037\000'
  _globals['_STAKEENTRY'].fields_by_name['delegate_limit']._loaded_options = None
  _globals['_STAKEENTRY'].fields_by_name['delegate_limit']._serialized_options = b'\310\336\037\000'
  _globals['_STAKEENTRY'].fields_by_name['description']._loaded_options = None
  _globals['_STAKEENTRY'].fields_by_name['description']._serialized_options = b'\310\336\037\000\250\347\260*\001'
  _globals['_STAKEENTRY']._serialized_start=228
  _globals['_STAKEENTRY']._serialized_end=803
  _globals['_BLOCKREPORT']._serialized_start=805
  _globals['_BLOCKREPORT']._serialized_end=855
# @@protoc_insertion_point(module_scope)
