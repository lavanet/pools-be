# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: lavanet/lava/pairing/epoch_cu.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'lavanet/lava/pairing/epoch_cu.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#lavanet/lava/pairing/epoch_cu.proto\x12\x14lavanet.lava.pairing\"\x14\n\x12UniqueEpochSession\"&\n\x0fProviderEpochCu\x12\x13\n\x0bserviced_cu\x18\x01 \x01(\x04\"3\n\x19ProviderEpochComplainerCu\x12\x16\n\x0e\x63omplainers_cu\x18\x01 \x01(\x04\"%\n\x17ProviderConsumerEpochCu\x12\n\n\x02\x63u\x18\x01 \x01(\x04\x42,Z*github.com/lavanet/lava/v2/x/pairing/typesb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'lavanet.lava.pairing.epoch_cu_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z*github.com/lavanet/lava/v2/x/pairing/types'
  _globals['_UNIQUEEPOCHSESSION']._serialized_start=61
  _globals['_UNIQUEEPOCHSESSION']._serialized_end=81
  _globals['_PROVIDEREPOCHCU']._serialized_start=83
  _globals['_PROVIDEREPOCHCU']._serialized_end=121
  _globals['_PROVIDEREPOCHCOMPLAINERCU']._serialized_start=123
  _globals['_PROVIDEREPOCHCOMPLAINERCU']._serialized_end=174
  _globals['_PROVIDERCONSUMEREPOCHCU']._serialized_start=176
  _globals['_PROVIDERCONSUMEREPOCHCU']._serialized_end=213
# @@protoc_insertion_point(module_scope)
